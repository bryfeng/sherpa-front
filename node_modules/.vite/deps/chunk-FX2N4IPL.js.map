{
  "version": 3,
  "sources": ["../../@reown/appkit/src/networks/utils.ts", "../../@reown/appkit/src/networks/solana/solana.ts", "../../@reown/appkit/src/networks/solana/solanaDevnet.ts", "../../@reown/appkit/src/networks/solana/solanaTestnet.ts", "../../@reown/appkit/src/networks/bitcoin.ts", "../../@reown/appkit/src/utils/HelpersUtil.ts", "../../@reown/appkit/src/utils/ConstantsUtil.ts", "../../@reown/appkit/src/auth-provider/W3MFrameProviderSingleton.ts", "../../@reown/appkit/node_modules/unstorage/dist/shared/unstorage.zVDD2mZo.mjs", "../../@reown/appkit/node_modules/unstorage/dist/index.mjs", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/accounts/utils/publicKeyToAddress.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/signature/recoverPublicKey.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/signature/recoverAddress.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/formatters/transaction.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/formatters/block.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/actions/public/getTransactionCount.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/constants/blob.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/formatters/log.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/actions/wallet/sendTransaction.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/formatters/transactionReceipt.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/actions/wallet/sendCalls.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/promise/withDedupe.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/rpc/id.ts", "../../@reown/appkit/node_modules/@noble/hashes/src/legacy.ts", "../../@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem/utils/nonceManager.ts", "../../@reown/appkit/node_modules/ox/core/Hash.ts", "../../@reown/appkit/node_modules/ox/core/internal/lru.ts", "../../@reown/appkit/node_modules/ox/core/Caches.ts", "../../@reown/appkit/node_modules/ox/core/Address.ts", "../../@reown/appkit/node_modules/ox/core/Solidity.ts", "../../@reown/appkit/node_modules/ox/core/internal/cursor.ts", "../../@reown/appkit/node_modules/ox/core/AbiParameters.ts", "../../@reown/appkit/node_modules/uint8arrays/esm/src/util/as-uint8array.js", "../../@reown/appkit/node_modules/uint8arrays/esm/src/alloc.js", "../../@reown/appkit/node_modules/uint8arrays/esm/src/concat.js", "../../@reown/appkit/node_modules/uint8arrays/esm/src/util/bases.js", "../../@reown/appkit/node_modules/uint8arrays/esm/src/from-string.js", "../../@reown/appkit/node_modules/uint8arrays/esm/src/to-string.js", "../../@reown/appkit-utils/src/ethers/EthersHelpersUtil.ts", "../../@reown/appkit-utils/src/bitcoin/BitcoinConstantsUtil.ts", "../../@reown/appkit/src/connections/ConnectionManager.ts", "../../@reown/appkit/src/connectors/WalletConnectConnector.ts", "../../@reown/appkit/src/adapters/ChainAdapterBlueprint.ts", "../../@reown/appkit/src/universal-adapter/client.ts", "../../@reown/appkit/src/utils/ConfigUtil.ts", "../../@reown/appkit/src/client/appkit-base-client.ts", "../../@reown/appkit/src/client/appkit.ts", "../../@reown/appkit/exports/constants.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, null, "function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_, ...arguments_) {\n  try {\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  return BASE64_PREFIX + base64Encode(value);\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  return base64Decode(value.slice(BASE64_PREFIX.length));\n}\nfunction base64Decode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input, \"base64\");\n  }\n  return Uint8Array.from(\n    globalThis.atob(input),\n    (c) => c.codePointAt(0)\n  );\n}\nfunction base64Encode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input).toString(\"base64\");\n  }\n  return globalThis.btoa(String.fromCodePoint(...input));\n}\n\nconst storageKeyProperties = [\n  \"has\",\n  \"hasItem\",\n  \"get\",\n  \"getItem\",\n  \"getItemRaw\",\n  \"set\",\n  \"setItem\",\n  \"setItemRaw\",\n  \"del\",\n  \"remove\",\n  \"removeItem\",\n  \"getMeta\",\n  \"setMeta\",\n  \"removeMeta\",\n  \"getKeys\",\n  \"clear\",\n  \"mount\",\n  \"unmount\"\n];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = { ...storage };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = (key = \"\", ...args) => (\n      // @ts-ignore\n      storage[property](base + key, ...args)\n    );\n  }\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\n  nsStorage.keys = nsStorage.getKeys;\n  nsStorage.getItems = async (items, commonOptions) => {\n    const prefixedItems = items.map(\n      (item) => typeof item === \"string\" ? base + item : { ...item, key: base + item.key }\n    );\n    const results = await storage.getItems(prefixedItems, commonOptions);\n    return results.map((entry) => ({\n      key: entry.key.slice(base.length),\n      value: entry.value\n    }));\n  };\n  nsStorage.setItems = async (items, commonOptions) => {\n    const prefixedItems = items.map((item) => ({\n      key: base + item.key,\n      value: item.value,\n      options: item.options\n    }));\n    return storage.setItems(prefixedItems, commonOptions);\n  };\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0]?.replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\") || \"\";\n}\nfunction joinKeys(...keys) {\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\nfunction filterKeyByDepth(key, depth) {\n  if (depth === void 0) {\n    return true;\n  }\n  let substrCount = 0;\n  let index = key.indexOf(\":\");\n  while (index > -1) {\n    substrCount++;\n    index = key.indexOf(\":\", index + 1);\n  }\n  return substrCount <= depth;\n}\nfunction filterKeyByBase(key, base) {\n  if (base) {\n    return key.startsWith(base) && key[key.length - 1] !== \"$\";\n  }\n  return key[key.length - 1] !== \"$\";\n}\n\nexport { normalizeKey as a, asyncCall as b, filterKeyByBase as c, stringify as d, deserializeRaw as e, filterKeyByDepth as f, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, serializeRaw as s };\n", "import destr from 'destr';\nimport { n as normalizeBaseKey, a as normalizeKey, b as asyncCall, f as filterKeyByDepth, c as filterKeyByBase, s as serializeRaw, d as stringify, e as deserializeRaw, j as joinKeys } from './shared/unstorage.zVDD2mZo.mjs';\nexport { p as prefixStorage } from './shared/unstorage.zVDD2mZo.mjs';\n\nfunction defineDriver(factory) {\n  return factory;\n}\n\nconst DRIVER_NAME = \"memory\";\nconst memory = defineDriver(() => {\n  const data = /* @__PURE__ */ new Map();\n  return {\n    name: DRIVER_NAME,\n    getInstance: () => data,\n    hasItem(key) {\n      return data.has(key);\n    },\n    getItem(key) {\n      return data.get(key) ?? null;\n    },\n    getItemRaw(key) {\n      return data.get(key) ?? null;\n    },\n    setItem(key, value) {\n      data.set(key, value);\n    },\n    setItemRaw(key, value) {\n      data.set(key, value);\n    },\n    removeItem(key) {\n      data.delete(key);\n    },\n    getKeys() {\n      return [...data.keys()];\n    },\n    clear() {\n      data.clear();\n    },\n    dispose() {\n      data.clear();\n    }\n  };\n});\n\nfunction createStorage(options = {}) {\n  const context = {\n    mounts: { \"\": options.driver || memory() },\n    mountpoints: [\"\"],\n    watching: false,\n    watchListeners: [],\n    unwatch: {}\n  };\n  const getMount = (key) => {\n    for (const base of context.mountpoints) {\n      if (key.startsWith(base)) {\n        return {\n          base,\n          relativeKey: key.slice(base.length),\n          driver: context.mounts[base]\n        };\n      }\n    }\n    return {\n      base: \"\",\n      relativeKey: key,\n      driver: context.mounts[\"\"]\n    };\n  };\n  const getMounts = (base, includeParent) => {\n    return context.mountpoints.filter(\n      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)\n    ).map((mountpoint) => ({\n      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,\n      mountpoint,\n      driver: context.mounts[mountpoint]\n    }));\n  };\n  const onChange = (event, key) => {\n    if (!context.watching) {\n      return;\n    }\n    key = normalizeKey(key);\n    for (const listener of context.watchListeners) {\n      listener(event, key);\n    }\n  };\n  const startWatch = async () => {\n    if (context.watching) {\n      return;\n    }\n    context.watching = true;\n    for (const mountpoint in context.mounts) {\n      context.unwatch[mountpoint] = await watch(\n        context.mounts[mountpoint],\n        onChange,\n        mountpoint\n      );\n    }\n  };\n  const stopWatch = async () => {\n    if (!context.watching) {\n      return;\n    }\n    for (const mountpoint in context.unwatch) {\n      await context.unwatch[mountpoint]();\n    }\n    context.unwatch = {};\n    context.watching = false;\n  };\n  const runBatch = (items, commonOptions, cb) => {\n    const batches = /* @__PURE__ */ new Map();\n    const getBatch = (mount) => {\n      let batch = batches.get(mount.base);\n      if (!batch) {\n        batch = {\n          driver: mount.driver,\n          base: mount.base,\n          items: []\n        };\n        batches.set(mount.base, batch);\n      }\n      return batch;\n    };\n    for (const item of items) {\n      const isStringItem = typeof item === \"string\";\n      const key = normalizeKey(isStringItem ? item : item.key);\n      const value = isStringItem ? void 0 : item.value;\n      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };\n      const mount = getMount(key);\n      getBatch(mount).items.push({\n        key,\n        value,\n        relativeKey: mount.relativeKey,\n        options: options2\n      });\n    }\n    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(\n      (r) => r.flat()\n    );\n  };\n  const storage = {\n    // Item\n    hasItem(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      return asyncCall(driver.hasItem, relativeKey, opts);\n    },\n    getItem(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      return asyncCall(driver.getItem, relativeKey, opts).then(\n        (value) => destr(value)\n      );\n    },\n    getItems(items, commonOptions = {}) {\n      return runBatch(items, commonOptions, (batch) => {\n        if (batch.driver.getItems) {\n          return asyncCall(\n            batch.driver.getItems,\n            batch.items.map((item) => ({\n              key: item.relativeKey,\n              options: item.options\n            })),\n            commonOptions\n          ).then(\n            (r) => r.map((item) => ({\n              key: joinKeys(batch.base, item.key),\n              value: destr(item.value)\n            }))\n          );\n        }\n        return Promise.all(\n          batch.items.map((item) => {\n            return asyncCall(\n              batch.driver.getItem,\n              item.relativeKey,\n              item.options\n            ).then((value) => ({\n              key: item.key,\n              value: destr(value)\n            }));\n          })\n        );\n      });\n    },\n    getItemRaw(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (driver.getItemRaw) {\n        return asyncCall(driver.getItemRaw, relativeKey, opts);\n      }\n      return asyncCall(driver.getItem, relativeKey, opts).then(\n        (value) => deserializeRaw(value)\n      );\n    },\n    async setItem(key, value, opts = {}) {\n      if (value === void 0) {\n        return storage.removeItem(key);\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (!driver.setItem) {\n        return;\n      }\n      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);\n      if (!driver.watch) {\n        onChange(\"update\", key);\n      }\n    },\n    async setItems(items, commonOptions) {\n      await runBatch(items, commonOptions, async (batch) => {\n        if (batch.driver.setItems) {\n          return asyncCall(\n            batch.driver.setItems,\n            batch.items.map((item) => ({\n              key: item.relativeKey,\n              value: stringify(item.value),\n              options: item.options\n            })),\n            commonOptions\n          );\n        }\n        if (!batch.driver.setItem) {\n          return;\n        }\n        await Promise.all(\n          batch.items.map((item) => {\n            return asyncCall(\n              batch.driver.setItem,\n              item.relativeKey,\n              stringify(item.value),\n              item.options\n            );\n          })\n        );\n      });\n    },\n    async setItemRaw(key, value, opts = {}) {\n      if (value === void 0) {\n        return storage.removeItem(key, opts);\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (driver.setItemRaw) {\n        await asyncCall(driver.setItemRaw, relativeKey, value, opts);\n      } else if (driver.setItem) {\n        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);\n      } else {\n        return;\n      }\n      if (!driver.watch) {\n        onChange(\"update\", key);\n      }\n    },\n    async removeItem(key, opts = {}) {\n      if (typeof opts === \"boolean\") {\n        opts = { removeMeta: opts };\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (!driver.removeItem) {\n        return;\n      }\n      await asyncCall(driver.removeItem, relativeKey, opts);\n      if (opts.removeMeta || opts.removeMata) {\n        await asyncCall(driver.removeItem, relativeKey + \"$\", opts);\n      }\n      if (!driver.watch) {\n        onChange(\"remove\", key);\n      }\n    },\n    // Meta\n    async getMeta(key, opts = {}) {\n      if (typeof opts === \"boolean\") {\n        opts = { nativeOnly: opts };\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      const meta = /* @__PURE__ */ Object.create(null);\n      if (driver.getMeta) {\n        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));\n      }\n      if (!opts.nativeOnly) {\n        const value = await asyncCall(\n          driver.getItem,\n          relativeKey + \"$\",\n          opts\n        ).then((value_) => destr(value_));\n        if (value && typeof value === \"object\") {\n          if (typeof value.atime === \"string\") {\n            value.atime = new Date(value.atime);\n          }\n          if (typeof value.mtime === \"string\") {\n            value.mtime = new Date(value.mtime);\n          }\n          Object.assign(meta, value);\n        }\n      }\n      return meta;\n    },\n    setMeta(key, value, opts = {}) {\n      return this.setItem(key + \"$\", value, opts);\n    },\n    removeMeta(key, opts = {}) {\n      return this.removeItem(key + \"$\", opts);\n    },\n    // Keys\n    async getKeys(base, opts = {}) {\n      base = normalizeBaseKey(base);\n      const mounts = getMounts(base, true);\n      let maskedMounts = [];\n      const allKeys = [];\n      let allMountsSupportMaxDepth = true;\n      for (const mount of mounts) {\n        if (!mount.driver.flags?.maxDepth) {\n          allMountsSupportMaxDepth = false;\n        }\n        const rawKeys = await asyncCall(\n          mount.driver.getKeys,\n          mount.relativeBase,\n          opts\n        );\n        for (const key of rawKeys) {\n          const fullKey = mount.mountpoint + normalizeKey(key);\n          if (!maskedMounts.some((p) => fullKey.startsWith(p))) {\n            allKeys.push(fullKey);\n          }\n        }\n        maskedMounts = [\n          mount.mountpoint,\n          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))\n        ];\n      }\n      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;\n      return allKeys.filter(\n        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base)\n      );\n    },\n    // Utils\n    async clear(base, opts = {}) {\n      base = normalizeBaseKey(base);\n      await Promise.all(\n        getMounts(base, false).map(async (m) => {\n          if (m.driver.clear) {\n            return asyncCall(m.driver.clear, m.relativeBase, opts);\n          }\n          if (m.driver.removeItem) {\n            const keys = await m.driver.getKeys(m.relativeBase || \"\", opts);\n            return Promise.all(\n              keys.map((key) => m.driver.removeItem(key, opts))\n            );\n          }\n        })\n      );\n    },\n    async dispose() {\n      await Promise.all(\n        Object.values(context.mounts).map((driver) => dispose(driver))\n      );\n    },\n    async watch(callback) {\n      await startWatch();\n      context.watchListeners.push(callback);\n      return async () => {\n        context.watchListeners = context.watchListeners.filter(\n          (listener) => listener !== callback\n        );\n        if (context.watchListeners.length === 0) {\n          await stopWatch();\n        }\n      };\n    },\n    async unwatch() {\n      context.watchListeners = [];\n      await stopWatch();\n    },\n    // Mount\n    mount(base, driver) {\n      base = normalizeBaseKey(base);\n      if (base && context.mounts[base]) {\n        throw new Error(`already mounted at ${base}`);\n      }\n      if (base) {\n        context.mountpoints.push(base);\n        context.mountpoints.sort((a, b) => b.length - a.length);\n      }\n      context.mounts[base] = driver;\n      if (context.watching) {\n        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {\n          context.unwatch[base] = unwatcher;\n        }).catch(console.error);\n      }\n      return storage;\n    },\n    async unmount(base, _dispose = true) {\n      base = normalizeBaseKey(base);\n      if (!base || !context.mounts[base]) {\n        return;\n      }\n      if (context.watching && base in context.unwatch) {\n        context.unwatch[base]?.();\n        delete context.unwatch[base];\n      }\n      if (_dispose) {\n        await dispose(context.mounts[base]);\n      }\n      context.mountpoints = context.mountpoints.filter((key) => key !== base);\n      delete context.mounts[base];\n    },\n    getMount(key = \"\") {\n      key = normalizeKey(key) + \":\";\n      const m = getMount(key);\n      return {\n        driver: m.driver,\n        base: m.base\n      };\n    },\n    getMounts(base = \"\", opts = {}) {\n      base = normalizeKey(base);\n      const mounts = getMounts(base, opts.parents);\n      return mounts.map((m) => ({\n        driver: m.driver,\n        base: m.mountpoint\n      }));\n    },\n    // Aliases\n    keys: (base, opts = {}) => storage.getKeys(base, opts),\n    get: (key, opts = {}) => storage.getItem(key, opts),\n    set: (key, value, opts = {}) => storage.setItem(key, value, opts),\n    has: (key, opts = {}) => storage.hasItem(key, opts),\n    del: (key, opts = {}) => storage.removeItem(key, opts),\n    remove: (key, opts = {}) => storage.removeItem(key, opts)\n  };\n  return storage;\n}\nasync function snapshot(storage, base) {\n  base = normalizeBaseKey(base);\n  const keys = await storage.getKeys(base);\n  const snapshot2 = {};\n  await Promise.all(\n    keys.map(async (key) => {\n      snapshot2[key.slice(base.length)] = await storage.getItem(key);\n    })\n  );\n  return snapshot2;\n}\nasync function restoreSnapshot(driver, snapshot2, base = \"\") {\n  base = normalizeBaseKey(base);\n  await Promise.all(\n    Object.entries(snapshot2).map((e) => driver.setItem(base + e[0], e[1]))\n  );\n}\nfunction watch(driver, onChange, base) {\n  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {\n  };\n}\nasync function dispose(driver) {\n  if (typeof driver.dispose === \"function\") {\n    await asyncCall(driver.dispose);\n  }\n}\n\nconst builtinDrivers = {\n  \"azure-app-configuration\": \"unstorage/drivers/azure-app-configuration\",\n  \"azureAppConfiguration\": \"unstorage/drivers/azure-app-configuration\",\n  \"azure-cosmos\": \"unstorage/drivers/azure-cosmos\",\n  \"azureCosmos\": \"unstorage/drivers/azure-cosmos\",\n  \"azure-key-vault\": \"unstorage/drivers/azure-key-vault\",\n  \"azureKeyVault\": \"unstorage/drivers/azure-key-vault\",\n  \"azure-storage-blob\": \"unstorage/drivers/azure-storage-blob\",\n  \"azureStorageBlob\": \"unstorage/drivers/azure-storage-blob\",\n  \"azure-storage-table\": \"unstorage/drivers/azure-storage-table\",\n  \"azureStorageTable\": \"unstorage/drivers/azure-storage-table\",\n  \"capacitor-preferences\": \"unstorage/drivers/capacitor-preferences\",\n  \"capacitorPreferences\": \"unstorage/drivers/capacitor-preferences\",\n  \"cloudflare-kv-binding\": \"unstorage/drivers/cloudflare-kv-binding\",\n  \"cloudflareKVBinding\": \"unstorage/drivers/cloudflare-kv-binding\",\n  \"cloudflare-kv-http\": \"unstorage/drivers/cloudflare-kv-http\",\n  \"cloudflareKVHttp\": \"unstorage/drivers/cloudflare-kv-http\",\n  \"cloudflare-r2-binding\": \"unstorage/drivers/cloudflare-r2-binding\",\n  \"cloudflareR2Binding\": \"unstorage/drivers/cloudflare-r2-binding\",\n  \"db0\": \"unstorage/drivers/db0\",\n  \"deno-kv-node\": \"unstorage/drivers/deno-kv-node\",\n  \"denoKVNode\": \"unstorage/drivers/deno-kv-node\",\n  \"deno-kv\": \"unstorage/drivers/deno-kv\",\n  \"denoKV\": \"unstorage/drivers/deno-kv\",\n  \"fs-lite\": \"unstorage/drivers/fs-lite\",\n  \"fsLite\": \"unstorage/drivers/fs-lite\",\n  \"fs\": \"unstorage/drivers/fs\",\n  \"github\": \"unstorage/drivers/github\",\n  \"http\": \"unstorage/drivers/http\",\n  \"indexedb\": \"unstorage/drivers/indexedb\",\n  \"localstorage\": \"unstorage/drivers/localstorage\",\n  \"lru-cache\": \"unstorage/drivers/lru-cache\",\n  \"lruCache\": \"unstorage/drivers/lru-cache\",\n  \"memory\": \"unstorage/drivers/memory\",\n  \"mongodb\": \"unstorage/drivers/mongodb\",\n  \"netlify-blobs\": \"unstorage/drivers/netlify-blobs\",\n  \"netlifyBlobs\": \"unstorage/drivers/netlify-blobs\",\n  \"null\": \"unstorage/drivers/null\",\n  \"overlay\": \"unstorage/drivers/overlay\",\n  \"planetscale\": \"unstorage/drivers/planetscale\",\n  \"redis\": \"unstorage/drivers/redis\",\n  \"s3\": \"unstorage/drivers/s3\",\n  \"session-storage\": \"unstorage/drivers/session-storage\",\n  \"sessionStorage\": \"unstorage/drivers/session-storage\",\n  \"uploadthing\": \"unstorage/drivers/uploadthing\",\n  \"upstash\": \"unstorage/drivers/upstash\",\n  \"vercel-blob\": \"unstorage/drivers/vercel-blob\",\n  \"vercelBlob\": \"unstorage/drivers/vercel-blob\",\n  \"vercel-kv\": \"unstorage/drivers/vercel-kv\",\n  \"vercelKV\": \"unstorage/drivers/vercel-kv\",\n  \"vercel-runtime-cache\": \"unstorage/drivers/vercel-runtime-cache\",\n  \"vercelRuntimeCache\": \"unstorage/drivers/vercel-runtime-cache\"\n};\n\nexport { builtinDrivers, createStorage, defineDriver, filterKeyByBase, filterKeyByDepth, joinKeys, normalizeBaseKey, normalizeKey, restoreSnapshot, snapshot };\n", "import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { size } from '../data/size.js'\nimport {\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const signature_ = (() => {\n    // typeof signature: `Signature`\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n      const { r, s, v, yParity } = signature\n      const yParityOrV = Number(yParity ?? v)!\n      const recoveryBit = toRecoveryBit(yParityOrV)\n      return new secp256k1.Signature(\n        hexToBigInt(r),\n        hexToBigInt(s),\n      ).addRecoveryBit(recoveryBit)\n    }\n\n    // typeof signature: `Hex | ByteArray`\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\n    if (size(signatureHex) !== 65) throw new Error('invalid signature length')\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\n    const recoveryBit = toRecoveryBit(yParityOrV)\n    return secp256k1.Signature.fromCompact(\n      signatureHex.substring(2, 130),\n    ).addRecoveryBit(recoveryBit)\n  })()\n\n  const publicKey = signature_\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n\nfunction toRecoveryBit(yParityOrV: number) {\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\n  if (yParityOrV === 27) return 0\n  if (yParityOrV === 28) return 1\n  throw new Error('Invalid yParityOrV value')\n}\n", "import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash, signature }))\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { SignedAuthorizationList } from '../../types/authorization.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcAuthorizationList, RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, blockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n  '0x4': 'eip7702',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  if (transaction.authorizationList)\n    transaction_.authorizationList = formatAuthorizationList(\n      transaction.authorizationList,\n    )\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: RpcAuthorizationList,\n): SignedAuthorizationList {\n  return authorizationList.map((authorization) => ({\n    address: (authorization as any).address,\n    chainId: Number(authorization.chainId),\n    nonce: Number(authorization.nonce),\n    r: authorization.r,\n    s: authorization.s,\n    yParity: Number(authorization.yParity),\n  })) as SignedAuthorizationList\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = boolean,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'block',\n    Block<bigint, includeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, includeTransactions, blockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = includeTransactions extends true\n    ? Prettify<FormattedTransaction<chain, blockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = (block.transactions ?? []).map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request(\n    {\n      method: 'eth_getTransactionCount',\n      params: [\n        address,\n        typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : blockTag,\n      ],\n    },\n    {\n      dedupe: Boolean(blockNumber),\n    },\n  )\n  return hexToNumber(count)\n}\n", "// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../utils/authorization/recoverAuthorizationAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { LruMap } from '../../utils/lru.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  type PrepareTransactionRequestErrorType,\n  defaultParameters,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionErrorType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nconst supportsWalletNamespace = new LruMap<boolean>(128)\n\nexport type SendTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter\n\nexport type SendTransactionParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, Account | Address, true, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AccountNotFoundErrorType\n      | AccountTypeNotSupportedErrorType\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionErrorType\n      | RecoverAuthorizationAddressErrorType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends SendTransactionRequest<chain, chainOverride>,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    authorizationList,\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    type,\n    value,\n    ...rest\n  } = parameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  try {\n    assertRequest(parameters as AssertRequestParameters)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (parameters.to) return parameters.to\n\n      // If `to` is null, we are sending a deployment transaction.\n      if (parameters.to === null) return undefined\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`.',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    if (account?.type === 'json-rpc' || account === null) {\n      let chainId: number | undefined\n      if (chain !== null) {\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n        assertCurrentChain({\n          currentChainId: chainId,\n          chain,\n        })\n      }\n\n      const chainFormat = client.chain?.formatters?.transactionRequest?.format\n      const format = chainFormat || formatTransactionRequest\n\n      const request = format({\n        // Pick out extra data that might exist on the chain's transaction request type.\n        ...extract(rest, { format: chainFormat }),\n        accessList,\n        authorizationList,\n        blobs,\n        chainId,\n        data,\n        from: account?.address,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        type,\n        value,\n      } as TransactionRequest)\n\n      const isWalletNamespaceSupported = supportsWalletNamespace.get(client.uid)\n      const method = isWalletNamespaceSupported\n        ? 'wallet_sendTransaction'\n        : 'eth_sendTransaction'\n\n      try {\n        return await client.request(\n          {\n            method,\n            params: [request],\n          },\n          { retryCount: 0 },\n        )\n      } catch (e) {\n        if (isWalletNamespaceSupported === false) throw e\n\n        const error = e as BaseError\n        // If the transport does not support the method or input, attempt to use the\n        // `wallet_sendTransaction` method.\n        if (\n          error.name === 'InvalidInputRpcError' ||\n          error.name === 'InvalidParamsRpcError' ||\n          error.name === 'MethodNotFoundRpcError' ||\n          error.name === 'MethodNotSupportedRpcError'\n        ) {\n          return await client\n            .request(\n              {\n                method: 'wallet_sendTransaction',\n                params: [request],\n              },\n              { retryCount: 0 },\n            )\n            .then((hash) => {\n              supportsWalletNamespace.set(client.uid, true)\n              return hash\n            })\n            .catch((e) => {\n              const walletNamespaceError = e as BaseError\n              if (\n                walletNamespaceError.name === 'MethodNotFoundRpcError' ||\n                walletNamespaceError.name === 'MethodNotSupportedRpcError'\n              ) {\n                supportsWalletNamespace.set(client.uid, false)\n                throw error\n              }\n\n              throw walletNamespaceError\n            })\n        }\n\n        throw error\n      }\n    }\n\n    if (account?.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        authorizationList,\n        blobs,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        nonceManager: account.nonceManager,\n        parameters: [...defaultParameters, 'sidecars'],\n        type,\n        value,\n        ...rest,\n        to,\n      } as any)\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(request, {\n        serializer,\n      })) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    if (account?.type === 'smart')\n      throw new AccountTypeNotSupportedError({\n        metaMessages: [\n          'Consider using the `sendUserOperation` Action instead.',\n        ],\n        docsPath: '/docs/actions/bundler/sendUserOperation',\n        type: 'smart',\n      })\n\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n      type: (account as any)?.type,\n    })\n  } catch (err) {\n    if (err instanceof AccountTypeNotSupportedError) throw err\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain || undefined,\n    })\n  }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n", "import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  AtomicityNotSupportedError,\n  UnsupportedNonOptionalCapabilityError,\n} from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, GetAccountParameter } from '../../types/account.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { WalletSendCallsParameters } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { concat } from '../../utils/data/concat.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js'\nimport { sendTransaction } from './sendTransaction.js'\n\nexport const fallbackMagicIdentifier =\n  '0x5792579257925792579257925792579257925792579257925792579257925792'\nexport const fallbackTransactionErrorMagicIdentifier = numberToHex(0, {\n  size: 32,\n})\n\nexport type SendCallsParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _chain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  chain?: chainOverride | Chain | undefined\n  calls: Calls<Narrow<calls>>\n  capabilities?: ExtractCapabilities<'sendCalls', 'Request'> | undefined\n  experimental_fallback?: boolean | undefined\n  experimental_fallbackDelay?: number | undefined\n  forceAtomic?: boolean | undefined\n  id?: string | undefined\n  version?: WalletSendCallsParameters[number]['version'] | undefined\n} & GetAccountParameter<account, Account | Address, false, true>\n\nexport type SendCallsReturnType = Prettify<{\n  capabilities?: ExtractCapabilities<'sendCalls', 'ReturnType'> | undefined\n  id: string\n}>\n\nexport type SendCallsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests the connected wallet to send a batch of calls.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Transaction identifier. {@link SendCallsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendCalls } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const id = await sendCalls(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   calls: [\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: 69420n,\n *     },\n *   ],\n * })\n */\nexport async function sendCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n): Promise<SendCallsReturnType> {\n  const {\n    account: account_ = client.account,\n    capabilities,\n    chain = client.chain,\n    experimental_fallback,\n    experimental_fallbackDelay = 32,\n    forceAtomic = false,\n    id,\n    version = '2.0.0',\n  } = parameters\n\n  const account = account_ ? parseAccount(account_) : null\n\n  const calls = parameters.calls.map((call_: unknown) => {\n    const call = call_ as Call\n\n    const data = call.abi\n      ? encodeFunctionData({\n          abi: call.abi,\n          functionName: call.functionName,\n          args: call.args,\n        })\n      : call.data\n\n    return {\n      data,\n      to: call.to,\n      value: call.value ? numberToHex(call.value) : undefined,\n    }\n  })\n\n  try {\n    const response = await client.request(\n      {\n        method: 'wallet_sendCalls',\n        params: [\n          {\n            atomicRequired: forceAtomic,\n            calls,\n            capabilities,\n            chainId: numberToHex(chain!.id),\n            from: account?.address,\n            id,\n            version,\n          },\n        ],\n      },\n      { retryCount: 0 },\n    )\n    if (typeof response === 'string') return { id: response }\n    return response as never\n  } catch (err) {\n    const error = err as BaseError\n\n    // If the transport does not support EIP-5792, fall back to\n    // `eth_sendTransaction`.\n    if (\n      experimental_fallback &&\n      (error.name === 'MethodNotFoundRpcError' ||\n        error.name === 'MethodNotSupportedRpcError' ||\n        error.details\n          .toLowerCase()\n          .includes('does not exist / is not available') ||\n        error.details.toLowerCase().includes('missing or invalid. request()') ||\n        error.details\n          .toLowerCase()\n          .includes('did not match any variant of untagged enum'))\n    ) {\n      if (capabilities) {\n        const hasNonOptionalCapability = Object.values(capabilities).some(\n          (capability) => !capability.optional,\n        )\n        if (hasNonOptionalCapability) {\n          const message =\n            'non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.'\n          throw new UnsupportedNonOptionalCapabilityError(\n            new BaseError(message, {\n              details: message,\n            }),\n          )\n        }\n      }\n      if (forceAtomic && calls.length > 1) {\n        const message =\n          '`forceAtomic` is not supported on fallback to `eth_sendTransaction`.'\n        throw new AtomicityNotSupportedError(\n          new BaseError(message, {\n            details: message,\n          }),\n        )\n      }\n\n      const promises: Promise<Hex>[] = []\n      for (const call of calls) {\n        const promise = sendTransaction(client, {\n          account,\n          chain,\n          data: call.data,\n          to: call.to,\n          value: call.value ? hexToBigInt(call.value) : undefined,\n        })\n        promises.push(promise)\n\n        // Note: some browser wallets require a small delay between transactions\n        // to prevent duplicate JSON-RPC requests.\n        if (experimental_fallbackDelay > 0)\n          await new Promise((resolve) =>\n            setTimeout(resolve, experimental_fallbackDelay),\n          )\n      }\n\n      const results = await Promise.allSettled(promises)\n      if (results.every((r) => r.status === 'rejected')) throw results[0].reason\n\n      const hashes = results.map((result) => {\n        if (result.status === 'fulfilled') return result.value\n        return fallbackTransactionErrorMagicIdentifier\n      })\n      return {\n        id: concat([\n          ...hashes,\n          numberToHex(chain!.id, { size: 32 }),\n          fallbackMagicIdentifier,\n        ]),\n      }\n    }\n\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain!,\n    })\n  }\n}\n", "import { LruMap } from '../lru.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\n\ntype WithDedupeOptions = {\n  enabled?: boolean | undefined\n  id?: string | undefined\n}\n\n/** Deduplicates in-flight promises. */\nexport function withDedupe<data>(\n  fn: () => Promise<data>,\n  { enabled = true, id }: WithDedupeOptions,\n): Promise<data> {\n  if (!enabled || !id) return fn()\n  if (promiseCache.get(id)) return promiseCache.get(id)!\n  const promise = fn().finally(() => promiseCache.delete(id))\n  promiseCache.set(id, promise)\n  return promise\n}\n", "function createIdStore() {\n  return {\n    current: 0,\n    take() {\n      return this.current++\n    },\n    reset() {\n      this.current = 0\n    },\n  }\n}\n\nexport const idCache = /*#__PURE__*/ createIdStore()\n", "/**\n\nSHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.\nDon't use them in a new protocol. What \"weak\" means:\n\n- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.\n- No practical pre-image attacks (only theoretical, 2^123.4)\n- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.ts';\nimport { type CHash, clean, createHasher, rotl } from './utils.ts';\n\n/** Initial SHA1 state */\nconst SHA1_IV = /* @__PURE__ */ Uint32Array.from([\n  0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n\n// Reusable temporary buffer\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\n\n/** SHA1 legacy hash class. */\nexport class SHA1 extends HashMD<SHA1> {\n  private A = SHA1_IV[0] | 0;\n  private B = SHA1_IV[1] | 0;\n  private C = SHA1_IV[2] | 0;\n  private D = SHA1_IV[3] | 0;\n  private E = SHA1_IV[4] | 0;\n\n  constructor() {\n    super(64, 20, 8, false);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { A, B, C, D, E } = this;\n    return [A, B, C, D, E];\n  }\n  protected set(A: number, B: number, C: number, D: number, E: number): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) SHA1_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 80; i++)\n      SHA1_W[i] = rotl(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n    // Compression function main loop, 80 rounds\n    let { A, B, C, D, E } = this;\n    for (let i = 0; i < 80; i++) {\n      let F, K;\n      if (i < 20) {\n        F = Chi(B, C, D);\n        K = 0x5a827999;\n      } else if (i < 40) {\n        F = B ^ C ^ D;\n        K = 0x6ed9eba1;\n      } else if (i < 60) {\n        F = Maj(B, C, D);\n        K = 0x8f1bbcdc;\n      } else {\n        F = B ^ C ^ D;\n        K = 0xca62c1d6;\n      }\n      const T = (rotl(A, 5) + F + E + K + SHA1_W[i]) | 0;\n      E = D;\n      D = C;\n      C = rotl(B, 30);\n      B = A;\n      A = T;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    this.set(A, B, C, D, E);\n  }\n  protected roundClean(): void {\n    clean(SHA1_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */\nexport const sha1: CHash = /* @__PURE__ */ createHasher(() => new SHA1());\n\n/** Per-round constants */\nconst p32 = /* @__PURE__ */ Math.pow(2, 32);\nconst K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) =>\n  Math.floor(p32 * Math.abs(Math.sin(i + 1)))\n);\n\n/** md5 initial state: same as sha1, but 4 u32 instead of 5. */\nconst MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);\n\n// Reusable temporary buffer\nconst MD5_W = /* @__PURE__ */ new Uint32Array(16);\n/** MD5 legacy hash class. */\nexport class MD5 extends HashMD<MD5> {\n  private A = MD5_IV[0] | 0;\n  private B = MD5_IV[1] | 0;\n  private C = MD5_IV[2] | 0;\n  private D = MD5_IV[3] | 0;\n\n  constructor() {\n    super(64, 16, 8, true);\n  }\n  protected get(): [number, number, number, number] {\n    const { A, B, C, D } = this;\n    return [A, B, C, D];\n  }\n  protected set(A: number, B: number, C: number, D: number): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) MD5_W[i] = view.getUint32(offset, true);\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D } = this;\n    for (let i = 0; i < 64; i++) {\n      let F, g, s;\n      if (i < 16) {\n        F = Chi(B, C, D);\n        g = i;\n        s = [7, 12, 17, 22];\n      } else if (i < 32) {\n        F = Chi(D, B, C);\n        g = (5 * i + 1) % 16;\n        s = [5, 9, 14, 20];\n      } else if (i < 48) {\n        F = B ^ C ^ D;\n        g = (3 * i + 5) % 16;\n        s = [4, 11, 16, 23];\n      } else {\n        F = C ^ (B | ~D);\n        g = (7 * i) % 16;\n        s = [6, 10, 15, 21];\n      }\n      F = F + A + K[i] + MD5_W[g];\n      A = D;\n      D = C;\n      C = B;\n      B = B + rotl(F, s[i % 4]);\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    this.set(A, B, C, D);\n  }\n  protected roundClean(): void {\n    clean(MD5_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/**\n * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.\n * MD5 architecture is similar to SHA1, with some differences:\n * - Reduced output length: 16 bytes (128 bit) instead of 20\n * - 64 rounds, instead of 80\n * - Little-endian: could be faster, but will require more code\n * - Non-linear index selection: huge speed-up for unroll\n * - Per round constants: more memory accesses, additional speed-up for unroll\n */\nexport const md5: CHash = /* @__PURE__ */ createHasher(() => new MD5());\n\n// RIPEMD-160\n\nconst Rho160 = /* @__PURE__ */ Uint8Array.from([\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n]);\nconst Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();\nconst Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();\nconst idxLR = /* @__PURE__ */ (() => {\n  const L = [Id160];\n  const R = [Pi160];\n  const res = [L, R];\n  for (let i = 0; i < 4; i++) for (let j of res) j.push(j[i].map((k) => Rho160[k]));\n  return res;\n})();\nconst idxL = /* @__PURE__ */ (() => idxLR[0])();\nconst idxR = /* @__PURE__ */ (() => idxLR[1])();\n// const [idxL, idxR] = idxLR;\n\nconst shifts160 = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => Uint8Array.from(i));\nconst shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst Kl160 = /* @__PURE__ */ Uint32Array.from([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr160 = /* @__PURE__ */ Uint32Array.from([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction ripemd_f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  if (group === 1) return (x & y) | (~x & z);\n  if (group === 2) return (x | ~y) ^ z;\n  if (group === 3) return (x & z) | (y & ~z);\n  return x ^ (y | ~z);\n}\n// Reusable temporary buffer\nconst BUF_160 = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number): void {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF_160[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean(): void {\n    clean(BUF_160);\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a legacy hash function from 1990s.\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n */\nexport const ripemd160: CHash = /* @__PURE__ */ createHasher(() => new RIPEMD160());\n", "import type { Address } from 'abitype'\n\nimport { getTransactionCount } from '../actions/public/getTransactionCount.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { MaybePromise } from '../types/utils.js'\nimport { LruMap } from './lru.js'\n\nexport type CreateNonceManagerParameters = {\n  source: NonceManagerSource\n}\n\ntype FunctionParameters = {\n  address: Address\n  chainId: number\n}\n\nexport type NonceManager = {\n  /** Get and increment a nonce. */\n  consume: (\n    parameters: FunctionParameters & { client: Client },\n  ) => Promise<number>\n  /** Increment a nonce. */\n  increment: (chainId: FunctionParameters) => void\n  /** Get a nonce. */\n  get: (chainId: FunctionParameters & { client: Client }) => Promise<number>\n  /** Reset a nonce. */\n  reset: (chainId: FunctionParameters) => void\n}\n\n/**\n * Creates a nonce manager for auto-incrementing transaction nonces.\n *\n * - Docs: https://viem.sh/docs/accounts/createNonceManager\n *\n * @example\n * ```ts\n * const nonceManager = createNonceManager({\n *   source: jsonRpc(),\n * })\n * ```\n */\nexport function createNonceManager(\n  parameters: CreateNonceManagerParameters,\n): NonceManager {\n  const { source } = parameters\n\n  const deltaMap = new Map()\n  const nonceMap = new LruMap<number>(8192)\n  const promiseMap = new Map<string, Promise<number>>()\n\n  const getKey = ({ address, chainId }: FunctionParameters) =>\n    `${address}.${chainId}`\n\n  return {\n    async consume({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n      const promise = this.get({ address, chainId, client })\n\n      this.increment({ address, chainId })\n      const nonce = await promise\n\n      await source.set({ address, chainId }, nonce)\n      nonceMap.set(key, nonce)\n\n      return nonce\n    },\n    async increment({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      const delta = deltaMap.get(key) ?? 0\n      deltaMap.set(key, delta + 1)\n    },\n    async get({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n\n      let promise = promiseMap.get(key)\n      if (!promise) {\n        promise = (async () => {\n          try {\n            const nonce = await source.get({ address, chainId, client })\n            const previousNonce = nonceMap.get(key) ?? 0\n            if (previousNonce > 0 && nonce <= previousNonce)\n              return previousNonce + 1\n            nonceMap.delete(key)\n            return nonce\n          } finally {\n            this.reset({ address, chainId })\n          }\n        })()\n        promiseMap.set(key, promise)\n      }\n\n      const delta = deltaMap.get(key) ?? 0\n      return delta + (await promise)\n    },\n    reset({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      deltaMap.delete(key)\n      promiseMap.delete(key)\n    },\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Sources\n\nexport type NonceManagerSource = {\n  /** Get a nonce. */\n  get(parameters: FunctionParameters & { client: Client }): MaybePromise<number>\n  /** Set a nonce. */\n  set(parameters: FunctionParameters, nonce: number): MaybePromise<void>\n}\n\n/** JSON-RPC source for a nonce manager. */\nexport function jsonRpc(): NonceManagerSource {\n  return {\n    async get(parameters) {\n      const { address, client } = parameters\n      return getTransactionCount(client, {\n        address,\n        blockTag: 'pending',\n      })\n    },\n    set() {},\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Default\n\n/** Default Nonce Manager with a JSON-RPC source. */\nexport const nonceManager = /*#__PURE__*/ createNonceManager({\n  source: jsonRpc(),\n})\n", "import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3'\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256'\nimport * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: keccak256.Options<as> = {},\n): keccak256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_keccak256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace keccak256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: ripemd160.Options<as> = {},\n): ripemd160.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_ripemd160(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace ripemd160 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: sha256.Options<as> = {},\n): sha256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_sha256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace sha256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value: string): value is Hex.Hex {\n  return Hex.validate(value) && Hex.size(value) === 32\n}\n\nexport declare namespace validate {\n  type ErrorType =\n    | Hex.validate.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n", "/**\n * @internal\n *\n * Map with a LRU (Least recently used) policy.\n * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n", "import type * as Address from './Address.js'\nimport { LruMap } from './internal/lru.js'\n\nconst caches = {\n  checksum: /*#__PURE__*/ new LruMap<Address.Address>(8192),\n}\n\nexport const checksum = caches.checksum\n\n/**\n * Clears all global caches.\n *\n * @example\n * ```ts\n * import { Caches } from 'ox'\n * Caches.clear()\n * ```\n */\nexport function clear() {\n  for (const cache of Object.values(caches)) cache.clear()\n}\n", "import type { Address as abitype_Address } from 'abitype'\nimport * as Bytes from './Bytes.js'\nimport * as Caches from './Caches.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as PublicKey from './PublicKey.js'\n\nconst addressRegex = /*#__PURE__*/ /^0x[a-fA-F0-9]{40}$/\n\n/** Root type for Address. */\nexport type Address = abitype_Address\n\n/**\n * Asserts that the given value is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xdeadbeef')\n * // @error: InvalidAddressError: Address \"0xdeadbeef\" is invalid.\n * ```\n *\n * @param value - Value to assert if it is a valid address.\n * @param options - Assertion options.\n */\nexport function assert(\n  value: string,\n  options: assert.Options = {},\n): asserts value is Address {\n  const { strict = true } = options\n\n  if (!addressRegex.test(value))\n    throw new InvalidAddressError({\n      address: value,\n      cause: new InvalidInputError(),\n    })\n\n  if (strict) {\n    if (value.toLowerCase() === value) return\n    if (checksum(value as Address) !== value)\n      throw new InvalidAddressError({\n        address: value,\n        cause: new InvalidChecksumError(),\n      })\n  }\n}\n\nexport declare namespace assert {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = InvalidAddressError | Errors.GlobalErrorType\n}\n\n/**\n * Computes the checksum address for the given {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @param address - The address to compute the checksum for.\n * @returns The checksummed address.\n */\nexport function checksum(address: string): Address {\n  if (Caches.checksum.has(address)) return Caches.checksum.get(address)!\n\n  assert(address, { strict: false })\n\n  const hexAddress = address.substring(2).toLowerCase()\n  const hash = Hash.keccak256(Bytes.fromString(hexAddress), { as: 'Bytes' })\n\n  const characters = hexAddress.split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1]! >> 4 >= 8 && characters[i]) {\n      characters[i] = characters[i]!.toUpperCase()\n    }\n    if ((hash[i >> 1]! & 0x0f) >= 8 && characters[i + 1]) {\n      characters[i + 1] = characters[i + 1]!.toUpperCase()\n    }\n  }\n\n  const result = `0x${characters.join('')}` as const\n  Caches.checksum.set(address, result)\n  return result\n}\n\nexport declare namespace checksum {\n  type ErrorType =\n    | assert.ErrorType\n    | Hash.keccak256.ErrorType\n    | Bytes.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {\n *   checksum: false\n * })\n * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('hello')\n * // @error: InvalidAddressError: Address \"0xa\" is invalid.\n * ```\n *\n * @param address - An address string to convert to a typed Address.\n * @param options - Conversion options.\n * @returns The typed Address.\n */\nexport function from(address: string, options: from.Options = {}): Address {\n  const { checksum: checksumVal = false } = options\n  assert(address)\n  if (checksumVal) return checksum(address)\n  return address as Address\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | assert.ErrorType\n    | checksum.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an ECDSA public key to an {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address, PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from(\n *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',\n * )\n * const address = Address.fromPublicKey(publicKey)\n * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\n * ```\n *\n * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.\n * @param options - Conversion options.\n * @returns The {@link ox#Address.Address} corresponding to the public key.\n */\nexport function fromPublicKey(\n  publicKey: PublicKey.PublicKey,\n  options: fromPublicKey.Options = {},\n): Address {\n  const address = Hash.keccak256(\n    `0x${PublicKey.toHex(publicKey).slice(4)}`,\n  ).substring(26)\n  return from(`0x${address}`, options)\n}\n\nexport declare namespace fromPublicKey {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | Hash.keccak256.ErrorType\n    | PublicKey.toHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Address.Address} are equal.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * )\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'\n * )\n * // @log: false\n * ```\n *\n * @param addressA - The first address to compare.\n * @param addressB - The second address to compare.\n * @returns Whether the addresses are equal.\n */\nexport function isEqual(addressA: Address, addressB: Address): boolean {\n  assert(addressA, { strict: false })\n  assert(addressB, { strict: false })\n  return addressA.toLowerCase() === addressB.toLowerCase()\n}\n\nexport declare namespace isEqual {\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given address is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param address - Value to check if it is a valid address.\n * @param options - Check options.\n * @returns Whether the address is a valid address.\n */\nexport function validate(\n  address: string,\n  options: validate.Options = {},\n): address is Address {\n  const { strict = true } = options ?? {}\n  try {\n    assert(address, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n}\n\n/**\n * Thrown when an address is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0x123')\n * // @error: Address.InvalidAddressError: Address `0x123` is invalid.\n * ```\n */\nexport class InvalidAddressError<\n  cause extends InvalidInputError | InvalidChecksumError =\n    | InvalidInputError\n    | InvalidChecksumError,\n> extends Errors.BaseError<cause> {\n  override readonly name = 'Address.InvalidAddressError'\n\n  constructor({ address, cause }: { address: string; cause: cause }) {\n    super(`Address \"${address}\" is invalid.`, {\n      cause,\n    })\n  }\n}\n\n/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */\nexport class InvalidInputError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidInputError'\n\n  constructor() {\n    super('Address is not a 20 byte (40 hexadecimal character) value.')\n  }\n}\n\n/** Thrown when an address does not match its checksum counterpart. */\nexport class InvalidChecksumError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidChecksumError'\n\n  constructor() {\n    super('Address does not match its checksum counterpart.')\n  }\n}\n", "export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n", "import type { Bytes } from '../Bytes.js'\nimport * as Errors from '../Errors.js'\n\n/** @internal */\nexport type Cursor = {\n  bytes: Bytes\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): Bytes[number]\n  inspectBytes(length: number, position?: number): Bytes\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: Bytes[number]): void\n  pushBytes(bytes: Bytes): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): Bytes[number]\n  readBytes(length: number, size?: number): Bytes\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\nconst staticCursor: Cursor = /*#__PURE__*/ {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: Bytes[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: Bytes) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\n/** @internal */\nexport function create(\n  bytes: Bytes,\n  { recursiveReadLimit = 8_192 }: create.Config = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n\n/** @internal */\nexport declare namespace create {\n  type Config = { recursiveReadLimit?: number | undefined }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** @internal */\nexport class NegativeOffsetError extends Errors.BaseError {\n  override readonly name = 'Cursor.NegativeOffsetError'\n\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\n/** @internal */\nexport class PositionOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Cursor.PositionOutOfBoundsError'\n\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\n/** @internal */\nexport class RecursiveReadLimitExceededError extends Errors.BaseError {\n  override readonly name = 'Cursor.RecursiveReadLimitExceededError'\n\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n", "import * as abitype from 'abitype'\nimport * as Address from './Address.js'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Solidity from './Solidity.js'\nimport * as internal from './internal/abiParameters.js'\nimport * as Cursor from './internal/cursor.js'\n\n/** Root type for ABI parameters. */\nexport type AbiParameters = readonly abitype.AbiParameter[]\n\n/** A parameter on an {@link ox#AbiParameters.AbiParameters}. */\nexport type Parameter = abitype.AbiParameter\n\n/** A packed ABI type. */\nexport type PackedAbiType =\n  | abitype.SolidityAddress\n  | abitype.SolidityBool\n  | abitype.SolidityBytes\n  | abitype.SolidityInt\n  | abitype.SolidityString\n  | abitype.SolidityArrayWithoutTuple\n\n/**\n * Decodes ABI-encoded data into its respective primitive values based on ABI Parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * You can pass **JSON ABI** Parameters:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' },\n *   ],\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @param parameters - The set of ABI parameters to decode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param data - ABI encoded data.\n * @param options - Decoding options.\n * @returns Array of decoded values.\n */\nexport function decode<\n  const parameters extends AbiParameters,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  parameters: parameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options?: decode.Options<as>,\n): decode.ReturnType<parameters, as>\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function decode(\n  parameters: AbiParameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options: {\n    as?: 'Array' | 'Object' | undefined\n    checksumAddress?: boolean | undefined\n  } = {},\n): readonly unknown[] | Record<string, unknown> {\n  const { as = 'Array', checksumAddress = false } = options\n\n  const bytes = typeof data === 'string' ? Bytes.fromHex(data) : data\n  const cursor = Cursor.create(bytes)\n\n  if (Bytes.size(bytes) === 0 && parameters.length > 0)\n    throw new ZeroDataError()\n  if (Bytes.size(bytes) && Bytes.size(bytes) < 32)\n    throw new DataSizeTooSmallError({\n      data: typeof data === 'string' ? data : Hex.fromBytes(data),\n      parameters: parameters as readonly Parameter[],\n      size: Bytes.size(bytes),\n    })\n\n  let consumed = 0\n  const values: any = as === 'Array' ? [] : {}\n  for (let i = 0; i < parameters.length; ++i) {\n    const param = parameters[i] as Parameter\n    cursor.setPosition(consumed)\n    const [data, consumed_] = internal.decodeParameter(cursor, param, {\n      checksumAddress,\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    if (as === 'Array') values.push(data)\n    else values[param.name ?? i] = data\n  }\n  return values\n}\n\nexport declare namespace decode {\n  type Options<as extends 'Object' | 'Array'> = {\n    /**\n     * Whether the decoded values should be returned as an `Object` or `Array`.\n     *\n     * @default \"Array\"\n     */\n    as?: as | 'Object' | 'Array' | undefined\n    /**\n     * Whether decoded addresses should be checksummed.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n\n  type ReturnType<\n    parameters extends AbiParameters = AbiParameters,\n    as extends 'Object' | 'Array' = 'Array',\n  > = parameters extends readonly []\n    ? as extends 'Object'\n      ? {}\n      : []\n    : as extends 'Object'\n      ? internal.ToObject<parameters>\n      : internal.ToPrimitiveTypes<parameters>\n\n  type ErrorType =\n    | Bytes.fromHex.ErrorType\n    | internal.decodeParameter.ErrorType\n    | ZeroDataError\n    | DataSizeTooSmallError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * Specify **JSON ABI** Parameters as schema:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   [\n *     { type: 'string', name: 'name' },\n *     { type: 'uint', name: 'age' },\n *     { type: 'bool', name: 'isOwner' },\n *   ],\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.\n * @returns ABI encoded data.\n */\nexport function encode<\n  const parameters extends AbiParameters | readonly unknown[],\n>(\n  parameters: parameters,\n  values: parameters extends AbiParameters\n    ? internal.ToPrimitiveTypes<parameters>\n    : never,\n  options?: encode.Options,\n): Hex.Hex {\n  const { checksumAddress = false } = options ?? {}\n\n  if (parameters.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: parameters.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParameters = internal.prepareParameters({\n    checksumAddress,\n    parameters: parameters as readonly Parameter[],\n    values: values as any,\n  })\n  const data = internal.encode(preparedParameters)\n  if (data.length === 0) return '0x'\n  return data\n}\n\nexport declare namespace encode {\n  type ErrorType =\n    | LengthMismatchError\n    | internal.encode.ErrorType\n    | internal.prepareParameters.ErrorType\n    | Errors.GlobalErrorType\n\n  type Options = {\n    /**\n     * Whether addresses should be checked against their checksum.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n}\n\n/**\n * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const encoded = AbiParameters.encodePacked(\n *   ['address', 'string'],\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],\n * )\n * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'\n * ```\n *\n * @param types - Set of ABI types to pack encode.\n * @param values - The set of primitive values that correspond to the ABI types defined in `types`.\n * @returns The encoded packed data.\n */\nexport function encodePacked<\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: packedAbiTypes, values: encodePacked.Values<packedAbiTypes>): Hex.Hex {\n  if (types.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex.Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encodePacked.encode(type, value))\n  }\n  return Hex.concat(...data)\n}\n\nexport namespace encodePacked {\n  export type ErrorType =\n    | Hex.concat.ErrorType\n    | LengthMismatchError\n    | Errors.GlobalErrorType\n\n  export type Values<\n    packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n  > = {\n    [key in keyof packedAbiTypes]: packedAbiTypes[key] extends abitype.AbiType\n      ? abitype.AbiParameterToPrimitiveType<{ type: packedAbiTypes[key] }>\n      : unknown\n  }\n\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  export function encode<const packedAbiType extends PackedAbiType | unknown>(\n    type: packedAbiType,\n    value: Values<[packedAbiType]>[0],\n    isArray = false,\n  ): Hex.Hex {\n    if (type === 'address') {\n      const address = value as Address.Address\n      Address.assert(address)\n      return Hex.padLeft(\n        address.toLowerCase() as Hex.Hex,\n        isArray ? 32 : 0,\n      ) as Address.Address\n    }\n    if (type === 'string') return Hex.fromString(value as string)\n    if (type === 'bytes') return value as Hex.Hex\n    if (type === 'bool')\n      return Hex.padLeft(Hex.fromBoolean(value as boolean), isArray ? 32 : 1)\n\n    const intMatch = (type as string).match(Solidity.integerRegex)\n    if (intMatch) {\n      const [_type, baseType, bits = '256'] = intMatch\n      const size = Number.parseInt(bits) / 8\n      return Hex.fromNumber(value as number, {\n        size: isArray ? 32 : size,\n        signed: baseType === 'int',\n      })\n    }\n\n    const bytesMatch = (type as string).match(Solidity.bytesRegex)\n    if (bytesMatch) {\n      const [_type, size] = bytesMatch\n      if (Number.parseInt(size!) !== ((value as Hex.Hex).length - 2) / 2)\n        throw new BytesSizeMismatchError({\n          expectedSize: Number.parseInt(size!),\n          value: value as Hex.Hex,\n        })\n      return Hex.padRight(value as Hex.Hex, isArray ? 32 : 0) as Hex.Hex\n    }\n\n    const arrayMatch = (type as string).match(Solidity.arrayRegex)\n    if (arrayMatch && Array.isArray(value)) {\n      const [_type, childType] = arrayMatch\n      const data: Hex.Hex[] = []\n      for (let i = 0; i < value.length; i++) {\n        data.push(encode(childType, value[i], true))\n      }\n      if (data.length === 0) return '0x'\n      return Hex.concat(...data)\n    }\n\n    throw new InvalidTypeError(type as string)\n  }\n}\n\n/**\n * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const formatted = AbiParameters.format([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param parameters - The ABI Parameters to format.\n * @returns The formatted ABI Parameters  .\n */\nexport function format<\n  const parameters extends readonly [\n    Parameter | abitype.AbiEventParameter,\n    ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n  ],\n>(\n  parameters:\n    | parameters\n    | readonly [\n        Parameter | abitype.AbiEventParameter,\n        ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n      ],\n): abitype.FormatAbiParameters<parameters> {\n  return abitype.formatAbiParameters(parameters)\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.\n *\n * @example\n * ### JSON Parameters\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable Parameters\n *\n * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from('address spender, uint256 amount')\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'Foo foo, address bar',\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param parameters - The ABI Parameters to parse.\n * @returns The typed ABI Parameters.\n */\nexport function from<\n  const parameters extends AbiParameters | string | readonly string[],\n>(\n  parameters: parameters | AbiParameters | string | readonly string[],\n): from.ReturnType<parameters> {\n  if (Array.isArray(parameters) && typeof parameters[0] === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  if (typeof parameters === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  return parameters as never\n}\n\nexport declare namespace from {\n  type ReturnType<\n    parameters extends AbiParameters | string | readonly string[],\n  > = parameters extends string\n    ? abitype.ParseAbiParameters<parameters>\n    : parameters extends readonly string[]\n      ? abitype.ParseAbiParameters<parameters>\n      : parameters\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Throws when the data size is too small for the given parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x010f')\n * //                                             ↑ ❌ 2 bytes\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass a valid data size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class DataSizeTooSmallError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.DataSizeTooSmallError'\n  constructor({\n    data,\n    parameters,\n    size,\n  }: { data: Hex.Hex; parameters: readonly Parameter[]; size: number }) {\n    super(`Data size of ${size} bytes is too small for given parameters.`, {\n      metaMessages: [\n        `Params: (${abitype.formatAbiParameters(parameters as readonly [Parameter])})`,\n        `Data:   ${data} (${size} bytes)`,\n      ],\n    })\n  }\n}\n\n/**\n * Throws when zero data is provided, but data is expected.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x')\n * //                                           ↑ ❌ zero data\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass valid data.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class ZeroDataError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\n/**\n * The length of the array value does not match the length specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])\n * //                                               ↑ expected: 3  ↑ ❌ length: 2\n * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch\n * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.\n * ```\n *\n * ### Solution\n *\n * Pass an array of the correct length.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])\n * //                                                         ↑ ✅ length: 3\n * ```\n */\nexport class ArrayLengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      `Array length mismatch for type \\`${type}\\`. Expected: \\`${expectedLength}\\`. Given: \\`${givenLength}\\`.`,\n    )\n  }\n}\n\n/**\n * The size of the bytes value does not match the size specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])\n * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes\n * // @error: BytesSizeMismatchError: Size of bytes \"0xdeadbeefdeadbeefdeadbeef\"\n * // @error: (bytes12) does not match expected size (bytes8).\n * ```\n *\n * ### Solution\n *\n * Pass a bytes value of the correct size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])\n * //                                                       ↑ ✅ size: 8 bytes\n * ```\n */\nexport class BytesSizeMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    value,\n  }: { expectedSize: number; value: Hex.Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${Hex.size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\n/**\n * The length of the values to encode does not match the length of the ABI parameters.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])\n * // @error: LengthMismatchError: ABI encoding params/values length mismatch.\n * // @error: Expected length (params): 2\n * // @error: Given length (values): 1\n * ```\n *\n * ### Solution\n *\n * Pass the correct number of values to encode.\n *\n * ### Solution\n *\n * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).\n */\nexport class LengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.LengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding parameters/values length mismatch.',\n        `Expected length (parameters): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\n/**\n * The value provided is not a valid array as specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])\n * ```\n *\n * ### Solution\n *\n * Pass an array value.\n */\nexport class InvalidArrayError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidArrayError'\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is not a valid array.`)\n  }\n}\n\n/**\n * Throws when the ABI parameter type is invalid.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                             ↑ ❌ invalid type\n * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.\n * ```\n */\nexport class InvalidTypeError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidTypeError'\n  constructor(type: string) {\n    super(`Type \\`${type}\\` is not a valid ABI Type.`)\n  }\n}\n", "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", null, null, null, null, null, null, null, null, null, null],
  "mappings": "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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLO,IAAM,oBAAoB;EAC/B,kBAAkB,OAAa;AAC7B,UA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",
  "names": ["ns", "_a", "_c", "_e", "getActiveCaipNetwork", "_a", "c", "_a", "keys", "r", "_a", "p", "m", "keys", "a", "b", "toHex", "secp256k1", "r", "v", "yParityOrV", "recoveryBit", "A", "B", "C", "D", "E", "i", "F", "K", "T", "_", "g", "L", "R", "j", "k", "x", "y", "z", "h2", "h3", "ar", "br", "cr", "dr", "er", "rr", "sr", "tr", "keccak256", "as", "LruMap", "size", "LruMap", "InvalidAddressError", "checksum", "keccak256", "i", "InvalidAddressError", "arrayRegex", "bytesRegex", "integerRegex", "maxUint256", "PositionOutOfBoundsError", "size", "PositionOutOfBoundsError", "encodePacked", "i", "encode", "fromString", "integerRegex", "size", "bytesRegex", "BytesSizeMismatchError", "arrayRegex", "BytesSizeMismatchError", "size", "size", "concat", "encode", "decode", "string", "i", "fromString", "string", "toString", "string", "_a", "c", "n", "_a", "_c", "_e", "_f", "accounts", "a", "n", "c", "_a", "address", "_a", "_c", "self", "_e", "ConstantsUtil", "b", "_b", "_f", "c", "ConstantsUtil", "f", "_a", "_c", "c", "_e", "n", "ns", "f", "ConstantsUtil", "_f", "namespace", "b", "_b", "_i", "B", "message", "_", "_a", "_c", "_e", "_f", "_i", "ConstantsUtil", "n"]
}
