import {
  HelpersUtil
} from "./chunk-UV5ZS3S7.js";
import "./chunk-S5FXS722.js";
import "./chunk-6QOWD2HI.js";
import "./chunk-ZRHXVADZ.js";
import "./chunk-BOUR33AK.js";
import "./chunk-FS3CSUOV.js";
import "./chunk-CCNYR7NL.js";
import {
  createRef,
  ref
} from "./chunk-KHOU3EA3.js";
import "./chunk-TXZTHQ5Q.js";
import "./chunk-CGXHVTOC.js";
import "./chunk-OHPZIWSN.js";
import "./chunk-ODSEM5HO.js";
import {
  ifDefined
} from "./chunk-CR243GVO.js";
import "./chunk-7QGVMER7.js";
import "./chunk-55Y2HTHY.js";
import {
  property,
  state
} from "./chunk-22L3BMLB.js";
import "./chunk-EYV6QI4V.js";
import {
  EnsController,
  css as css2,
  customElement,
  elementStyles,
  resetStyles
} from "./chunk-QNIZUP7E.js";
import "./chunk-3XXDLP5Z.js";
import {
  LitElement,
  css,
  html
} from "./chunk-EGEXBN4Y.js";
import "./chunk-AL7AZVTW.js";
import "./chunk-ANJCMEYS.js";
import "./chunk-SPJEADIR.js";
import "./chunk-BGQWUGYM.js";
import "./chunk-RCC4727E.js";
import "./chunk-QYMIQ3LI.js";
import {
  AccountController,
  ChainController,
  ConnectorController,
  ConstantsUtil,
  ConstantsUtil2,
  CoreHelperUtil,
  EventsController,
  ModalController,
  NavigationUtil,
  OptionsController,
  RouterController,
  SnackController,
  ThemeController,
  W3mFrameRpcConstants,
  getPreferredAccountType,
  getW3mThemeVariables
} from "./chunk-3UWUCAPZ.js";
import "./chunk-YKYVH74R.js";
import "./chunk-BE2RPB44.js";
import "./chunk-C64ZUWQT.js";
import "./chunk-BP4SALFH.js";
import "./chunk-LTYKXCV2.js";
import "./chunk-SGYMVRCU.js";
import "./chunk-KASMAJTU.js";
import "./chunk-F3M2F5R6.js";
import "./chunk-5UBV5ZHI.js";
import "./chunk-64NT3AJW.js";

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-approve-transaction-view/styles.js
var styles_default = css`
  div {
    width: 100%;
  }

  [data-ready='false'] {
    transform: scale(1.05);
  }

  @media (max-width: 430px) {
    [data-ready='false'] {
      transform: translateY(-50px);
    }
  }
`;

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-approve-transaction-view/index.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var PAGE_HEIGHT = 600;
var PAGE_WIDTH = 360;
var HEADER_HEIGHT = 64;
var W3mApproveTransactionView = class W3mApproveTransactionView2 extends LitElement {
  constructor() {
    super();
    this.bodyObserver = void 0;
    this.unsubscribe = [];
    this.iframe = document.getElementById("w3m-iframe");
    this.ready = false;
    this.unsubscribe.push(...[
      ModalController.subscribeKey("open", (isOpen) => {
        if (!isOpen) {
          this.onHideIframe();
        }
      }),
      ModalController.subscribeKey("shake", (val) => {
        if (val) {
          this.iframe.style.animation = `w3m-shake 500ms var(--apkt-easings-ease-out-power-2)`;
        } else {
          this.iframe.style.animation = "none";
        }
      })
    ]);
  }
  disconnectedCallback() {
    var _a;
    this.onHideIframe();
    this.unsubscribe.forEach((unsubscribe) => unsubscribe());
    (_a = this.bodyObserver) == null ? void 0 : _a.unobserve(window.document.body);
  }
  async firstUpdated() {
    var _a;
    await this.syncTheme();
    this.iframe.style.display = "block";
    const container = (_a = this == null ? void 0 : this.renderRoot) == null ? void 0 : _a.querySelector("div");
    this.bodyObserver = new ResizeObserver((entries) => {
      var _a2, _b;
      const contentBoxSize = (_a2 = entries == null ? void 0 : entries[0]) == null ? void 0 : _a2.contentBoxSize;
      const width = (_b = contentBoxSize == null ? void 0 : contentBoxSize[0]) == null ? void 0 : _b.inlineSize;
      this.iframe.style.height = `${PAGE_HEIGHT}px`;
      container.style.height = `${PAGE_HEIGHT}px`;
      if (OptionsController.state.enableEmbedded) {
        this.updateFrameSizeForEmbeddedMode();
      } else if (width && width <= 430) {
        this.iframe.style.width = "100%";
        this.iframe.style.left = "0px";
        this.iframe.style.bottom = "0px";
        this.iframe.style.top = "unset";
        this.onShowIframe();
      } else {
        this.iframe.style.width = `${PAGE_WIDTH}px`;
        this.iframe.style.left = `calc(50% - ${PAGE_WIDTH / 2}px)`;
        this.iframe.style.top = `calc(50% - ${PAGE_HEIGHT / 2}px + ${HEADER_HEIGHT / 2}px)`;
        this.iframe.style.bottom = "unset";
        this.onShowIframe();
      }
    });
    this.bodyObserver.observe(window.document.body);
  }
  render() {
    return html`<div data-ready=${this.ready} id="w3m-frame-container"></div>`;
  }
  onShowIframe() {
    const isMobile = window.innerWidth <= 430;
    this.ready = true;
    this.iframe.style.animation = isMobile ? "w3m-iframe-zoom-in-mobile 200ms var(--apkt-easings-ease-out-power-2)" : "w3m-iframe-zoom-in 200ms var(--apkt-easings-ease-out-power-2)";
  }
  onHideIframe() {
    this.iframe.style.display = "none";
    this.iframe.style.animation = "w3m-iframe-fade-out 200ms var(--apkt-easings-ease-out-power-2)";
  }
  async syncTheme() {
    const authConnector = ConnectorController.getAuthConnector();
    if (authConnector) {
      const themeMode = ThemeController.getSnapshot().themeMode;
      const themeVariables = ThemeController.getSnapshot().themeVariables;
      await authConnector.provider.syncTheme({
        themeVariables,
        w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)
      });
    }
  }
  async updateFrameSizeForEmbeddedMode() {
    var _a;
    const container = (_a = this == null ? void 0 : this.renderRoot) == null ? void 0 : _a.querySelector("div");
    await new Promise((resolve) => {
      setTimeout(resolve, 300);
    });
    const rect = this.getBoundingClientRect();
    container.style.width = "100%";
    this.iframe.style.left = `${rect.left}px`;
    this.iframe.style.top = `${rect.top}px`;
    this.iframe.style.width = `${rect.width}px`;
    this.iframe.style.height = `${rect.height}px`;
    this.onShowIframe();
  }
};
W3mApproveTransactionView.styles = styles_default;
__decorate([
  state()
], W3mApproveTransactionView.prototype, "ready", void 0);
W3mApproveTransactionView = __decorate([
  customElement("w3m-approve-transaction-view")
], W3mApproveTransactionView);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-semantic-chip/styles.js
var styles_default2 = css2`
  a {
    border: none;
    border-radius: ${({ borderRadius }) => borderRadius["20"]};
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: ${({ spacing }) => spacing[1]};
    transition:
      background-color ${({ durations }) => durations["lg"]}
        ${({ easings }) => easings["ease-out-power-2"]},
      box-shadow ${({ durations }) => durations["lg"]}
        ${({ easings }) => easings["ease-out-power-2"]},
      border ${({ durations }) => durations["lg"]} ${({ easings }) => easings["ease-out-power-2"]};
    will-change: background-color, box-shadow, border;
  }

  /* -- Variants --------------------------------------------------------------- */
  a[data-type='success'] {
    background-color: ${({ tokens }) => tokens.core.backgroundSuccess};
    color: ${({ tokens }) => tokens.core.textSuccess};
  }

  a[data-type='error'] {
    background-color: ${({ tokens }) => tokens.core.backgroundError};
    color: ${({ tokens }) => tokens.core.textError};
  }

  a[data-type='warning'] {
    background-color: ${({ tokens }) => tokens.core.backgroundWarning};
    color: ${({ tokens }) => tokens.core.textWarning};
  }

  /* -- Sizes --------------------------------------------------------------- */
  a[data-size='sm'] {
    height: 24px;
  }

  a[data-size='md'] {
    height: 28px;
  }

  a[data-size='lg'] {
    height: 32px;
  }

  a[data-size='sm'] > wui-image,
  a[data-size='sm'] > wui-icon {
    width: 16px;
    height: 16px;
  }

  a[data-size='md'] > wui-image,
  a[data-size='md'] > wui-icon {
    width: 20px;
    height: 20px;
  }

  a[data-size='lg'] > wui-image,
  a[data-size='lg'] > wui-icon {
    width: 24px;
    height: 24px;
  }

  wui-text {
    padding-left: ${({ spacing }) => spacing[1]};
    padding-right: ${({ spacing }) => spacing[1]};
  }

  wui-image {
    border-radius: ${({ borderRadius }) => borderRadius[3]};
    overflow: hidden;
    user-drag: none;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-drag: none;
    -webkit-user-select: none;
    -ms-user-select: none;
  }

  /* -- States --------------------------------------------------------------- */
  @media (hover: hover) and (pointer: fine) {
    a[data-type='success']:not(:disabled):hover {
      background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
      box-shadow: 0px 0px 0px 1px ${({ tokens }) => tokens.core.borderSuccess};
    }

    a[data-type='error']:not(:disabled):hover {
      background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
      box-shadow: 0px 0px 0px 1px ${({ tokens }) => tokens.core.borderError};
    }

    a[data-type='warning']:not(:disabled):hover {
      background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
      box-shadow: 0px 0px 0px 1px ${({ tokens }) => tokens.core.borderWarning};
    }
  }

  a[data-type='success']:not(:disabled):focus-visible {
    box-shadow:
      0px 0px 0px 1px ${({ tokens }) => tokens.core.backgroundAccentPrimary},
      0px 0px 0px 4px ${({ tokens }) => tokens.core.foregroundAccent020};
  }

  a[data-type='error']:not(:disabled):focus-visible {
    box-shadow:
      0px 0px 0px 1px ${({ tokens }) => tokens.core.backgroundAccentPrimary},
      0px 0px 0px 4px ${({ tokens }) => tokens.core.foregroundAccent020};
  }

  a[data-type='warning']:not(:disabled):focus-visible {
    box-shadow:
      0px 0px 0px 1px ${({ tokens }) => tokens.core.backgroundAccentPrimary},
      0px 0px 0px 4px ${({ tokens }) => tokens.core.foregroundAccent020};
  }

  a:disabled {
    opacity: 0.5;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-semantic-chip/index.js
var __decorate2 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TEXT_BY_SIZE = {
  sm: "md-regular",
  md: "lg-regular",
  lg: "lg-regular"
};
var ICON_BY_TYPE = {
  success: "sealCheck",
  error: "warning",
  warning: "exclamationCircle"
};
var WuiSemanticChip = class WuiSemanticChip2 extends LitElement {
  constructor() {
    super(...arguments);
    this.type = "success";
    this.size = "md";
    this.imageSrc = void 0;
    this.disabled = false;
    this.href = "";
    this.text = void 0;
  }
  render() {
    return html`
      <a
        rel="noreferrer"
        target="_blank"
        href=${this.href}
        class=${this.disabled ? "disabled" : ""}
        data-type=${this.type}
        data-size=${this.size}
      >
        ${this.imageTemplate()}
        <wui-text variant=${TEXT_BY_SIZE[this.size]} color="inherit">${this.text}</wui-text>
      </a>
    `;
  }
  imageTemplate() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} size="inherit"></wui-image>`;
    }
    return html`<wui-icon
      name=${ICON_BY_TYPE[this.type]}
      weight="fill"
      color="inherit"
      size="inherit"
      class="image-icon"
    ></wui-icon>`;
  }
};
WuiSemanticChip.styles = [resetStyles, elementStyles, styles_default2];
__decorate2([
  property()
], WuiSemanticChip.prototype, "type", void 0);
__decorate2([
  property()
], WuiSemanticChip.prototype, "size", void 0);
__decorate2([
  property()
], WuiSemanticChip.prototype, "imageSrc", void 0);
__decorate2([
  property({ type: Boolean })
], WuiSemanticChip.prototype, "disabled", void 0);
__decorate2([
  property()
], WuiSemanticChip.prototype, "href", void 0);
__decorate2([
  property()
], WuiSemanticChip.prototype, "text", void 0);
WuiSemanticChip = __decorate2([
  customElement("wui-semantic-chip")
], WuiSemanticChip);

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-upgrade-wallet-view/index.js
var __decorate3 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var W3mUpgradeWalletView = class W3mUpgradeWalletView2 extends LitElement {
  render() {
    return html`
      <wui-flex flexDirection="column" alignItems="center" gap="5" padding="5">
        <wui-text variant="md-regular" color="primary">Follow the instructions on</wui-text>
        <wui-semantic-chip
          icon="externalLink"
          variant="fill"
          text=${ConstantsUtil2.SECURE_SITE_DASHBOARD}
          href=${ConstantsUtil2.SECURE_SITE_DASHBOARD}
          imageSrc=${ConstantsUtil2.SECURE_SITE_FAVICON}
          data-testid="w3m-secure-website-button"
        >
        </wui-semantic-chip>
        <wui-text variant="sm-regular" color="secondary">
          You will have to reconnect for security reasons
        </wui-text>
      </wui-flex>
    `;
  }
};
W3mUpgradeWalletView = __decorate3([
  customElement("w3m-upgrade-wallet-view")
], W3mUpgradeWalletView);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-account-name-suggestion-item/styles.js
var styles_default3 = css2`
  :host {
    width: 100%;
  }

  button {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
    border-radius: ${({ borderRadius }) => borderRadius[4]};
    padding: ${({ spacing }) => spacing[4]};
  }

  .name {
    max-width: 75%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      cursor: pointer;
      background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
      border-radius: ${({ borderRadius }) => borderRadius[6]};
    }
  }

  button:disabled {
    opacity: 0.5;
    cursor: default;
  }

  button:focus-visible:enabled {
    box-shadow: 0 0 0 4px ${({ tokens }) => tokens.core.foregroundAccent040};
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-account-name-suggestion-item/index.js
var __decorate4 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WuiAccountNameSuggestionItem = class WuiAccountNameSuggestionItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.name = "";
    this.registered = false;
    this.loading = false;
    this.disabled = false;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled}>
        <wui-text class="name" color="primary" variant="md-regular">${this.name}</wui-text>
        ${this.templateRightContent()}
      </button>
    `;
  }
  templateRightContent() {
    if (this.loading) {
      return html`<wui-loading-spinner size="lg" color="primary"></wui-loading-spinner>`;
    }
    return this.registered ? html`<wui-tag variant="info" size="sm">Registered</wui-tag>` : html`<wui-tag variant="success" size="sm">Available</wui-tag>`;
  }
};
WuiAccountNameSuggestionItem.styles = [resetStyles, elementStyles, styles_default3];
__decorate4([
  property()
], WuiAccountNameSuggestionItem.prototype, "name", void 0);
__decorate4([
  property({ type: Boolean })
], WuiAccountNameSuggestionItem.prototype, "registered", void 0);
__decorate4([
  property({ type: Boolean })
], WuiAccountNameSuggestionItem.prototype, "loading", void 0);
__decorate4([
  property({ type: Boolean })
], WuiAccountNameSuggestionItem.prototype, "disabled", void 0);
WuiAccountNameSuggestionItem = __decorate4([
  customElement("wui-account-name-suggestion-item")
], WuiAccountNameSuggestionItem);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-ens-input/styles.js
var styles_default4 = css2`
  :host {
    position: relative;
    width: 100%;
    display: inline-block;
  }

  :host([disabled]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .base-name {
    position: absolute;
    right: ${({ spacing }) => spacing[4]};
    top: 50%;
    transform: translateY(-50%);
    text-align: right;
    padding: ${({ spacing }) => spacing[1]};
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
    border-radius: ${({ borderRadius }) => borderRadius[1]};
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-ens-input/index.js
var __decorate5 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WuiEnsInput = class WuiEnsInput2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.loading = false;
  }
  render() {
    return html`
      <wui-input-text
        value=${ifDefined(this.value)}
        ?disabled=${this.disabled}
        .value=${this.value || ""}
        data-testid="wui-ens-input"
        icon="search"
        inputRightPadding="5xl"
        .onKeyDown=${this.onKeyDown}
      ></wui-input-text>
    `;
  }
};
WuiEnsInput.styles = [resetStyles, styles_default4];
__decorate5([
  property()
], WuiEnsInput.prototype, "errorMessage", void 0);
__decorate5([
  property({ type: Boolean })
], WuiEnsInput.prototype, "disabled", void 0);
__decorate5([
  property()
], WuiEnsInput.prototype, "value", void 0);
__decorate5([
  property({ type: Boolean })
], WuiEnsInput.prototype, "loading", void 0);
__decorate5([
  property({ attribute: false })
], WuiEnsInput.prototype, "onKeyDown", void 0);
WuiEnsInput = __decorate5([
  customElement("wui-ens-input")
], WuiEnsInput);

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-register-account-name-view/styles.js
var styles_default5 = css2`
  wui-flex {
    width: 100%;
  }

  .suggestion {
    background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
    border-radius: ${({ borderRadius }) => borderRadius[4]};
  }

  .suggestion:hover:not(:disabled) {
    cursor: pointer;
    border: none;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
    border-radius: ${({ borderRadius }) => borderRadius[6]};
    padding: ${({ spacing }) => spacing[4]};
  }

  .suggestion:disabled {
    opacity: 0.5;
    cursor: default;
  }

  .suggestion:focus-visible:not(:disabled) {
    box-shadow: 0 0 0 4px ${({ tokens }) => tokens.core.foregroundAccent040};
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
  }

  .suggested-name {
    max-width: 75%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  form {
    width: 100%;
    position: relative;
  }

  .input-submit-button,
  .input-loading-spinner {
    position: absolute;
    top: 22px;
    transform: translateY(-50%);
    right: 10px;
  }
`;

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-register-account-name-view/index.js
var __decorate6 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var W3mRegisterAccountNameView = class W3mRegisterAccountNameView2 extends LitElement {
  constructor() {
    super();
    this.formRef = createRef();
    this.usubscribe = [];
    this.name = "";
    this.error = "";
    this.loading = EnsController.state.loading;
    this.suggestions = EnsController.state.suggestions;
    this.profileName = AccountController.state.profileName;
    this.onDebouncedNameInputChange = CoreHelperUtil.debounce((value) => {
      if (value.length < 4) {
        this.error = "Name must be at least 4 characters long";
      } else if (!HelpersUtil.isValidReownName(value)) {
        this.error = "The value is not a valid username";
      } else {
        this.error = "";
        EnsController.getSuggestions(value);
      }
    });
    this.usubscribe.push(...[
      EnsController.subscribe((val) => {
        this.suggestions = val.suggestions;
        this.loading = val.loading;
      }),
      AccountController.subscribeKey("profileName", (val) => {
        this.profileName = val;
        if (val) {
          this.error = "You already own a name";
        }
      })
    ]);
  }
  firstUpdated() {
    var _a;
    (_a = this.formRef.value) == null ? void 0 : _a.addEventListener("keydown", this.onEnterKey.bind(this));
  }
  disconnectedCallback() {
    var _a;
    super.disconnectedCallback();
    this.usubscribe.forEach((unsub) => unsub());
    (_a = this.formRef.value) == null ? void 0 : _a.removeEventListener("keydown", this.onEnterKey.bind(this));
  }
  render() {
    return html`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        gap="4"
        .padding=${["1", "3", "4", "3"]}
      >
        <form ${ref(this.formRef)} @submit=${this.onSubmitName.bind(this)}>
          <wui-ens-input
            @inputChange=${this.onNameInputChange.bind(this)}
            .errorMessage=${this.error}
            .value=${this.name}
            .onKeyDown=${this.onKeyDown.bind(this)}
          >
          </wui-ens-input>
          ${this.submitButtonTemplate()}
          <input type="submit" hidden />
        </form>
        ${this.templateSuggestions()}
      </wui-flex>
    `;
  }
  submitButtonTemplate() {
    const isRegistered = this.suggestions.find((s) => {
      var _a, _b;
      return ((_b = (_a = s.name) == null ? void 0 : _a.split(".")) == null ? void 0 : _b[0]) === this.name && s.registered;
    });
    if (this.loading) {
      return html`<wui-loading-spinner
        class="input-loading-spinner"
        color="secondary"
      ></wui-loading-spinner>`;
    }
    const reownName = `${this.name}${ConstantsUtil.WC_NAME_SUFFIX}`;
    return html`
      <wui-icon-link
        ?disabled=${Boolean(isRegistered)}
        class="input-submit-button"
        size="sm"
        icon="chevronRight"
        iconColor=${isRegistered ? "default" : "accent-primary"}
        @click=${() => this.onSubmitName(reownName)}
      >
      </wui-icon-link>
    `;
  }
  onNameInputChange(event) {
    const value = HelpersUtil.validateReownName(event.detail || "");
    this.name = value;
    this.onDebouncedNameInputChange(value);
  }
  onKeyDown(event) {
    if (event.key.length === 1 && !HelpersUtil.isValidReownName(event.key)) {
      event.preventDefault();
    }
  }
  templateSuggestions() {
    if (!this.name || this.name.length < 4 || this.error) {
      return null;
    }
    return html`<wui-flex flexDirection="column" gap="1" alignItems="center">
      ${this.suggestions.map((suggestion) => html`<wui-account-name-suggestion-item
            name=${suggestion.name}
            ?registered=${suggestion.registered}
            ?loading=${this.loading}
            ?disabled=${suggestion.registered || this.loading}
            data-testid="account-name-suggestion"
            @click=${() => this.onSubmitName(suggestion.name)}
          ></wui-account-name-suggestion-item>`)}
    </wui-flex>`;
  }
  isAllowedToSubmit(name) {
    var _a;
    const pureName = (_a = name.split(".")) == null ? void 0 : _a[0];
    const isRegistered = this.suggestions.find((s) => {
      var _a2, _b;
      return ((_b = (_a2 = s.name) == null ? void 0 : _a2.split(".")) == null ? void 0 : _b[0]) === pureName && s.registered;
    });
    return !this.loading && !this.error && !this.profileName && pureName && EnsController.validateName(pureName) && !isRegistered;
  }
  async onSubmitName(name) {
    try {
      if (!this.isAllowedToSubmit(name)) {
        return;
      }
      EventsController.sendEvent({
        type: "track",
        event: "REGISTER_NAME_INITIATED",
        properties: {
          isSmartAccount: getPreferredAccountType(ChainController.state.activeChain) === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          ensName: name
        }
      });
      await EnsController.registerName(name);
      EventsController.sendEvent({
        type: "track",
        event: "REGISTER_NAME_SUCCESS",
        properties: {
          isSmartAccount: getPreferredAccountType(ChainController.state.activeChain) === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          ensName: name
        }
      });
    } catch (error) {
      SnackController.showError(error.message);
      EventsController.sendEvent({
        type: "track",
        event: "REGISTER_NAME_ERROR",
        properties: {
          isSmartAccount: getPreferredAccountType(ChainController.state.activeChain) === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          ensName: name,
          error: (error == null ? void 0 : error.message) || "Unknown error"
        }
      });
    }
  }
  onEnterKey(event) {
    if (event.key === "Enter" && this.name && this.isAllowedToSubmit(this.name)) {
      const reownName = `${this.name}${ConstantsUtil.WC_NAME_SUFFIX}`;
      this.onSubmitName(reownName);
    }
  }
};
W3mRegisterAccountNameView.styles = styles_default5;
__decorate6([
  property()
], W3mRegisterAccountNameView.prototype, "errorMessage", void 0);
__decorate6([
  state()
], W3mRegisterAccountNameView.prototype, "name", void 0);
__decorate6([
  state()
], W3mRegisterAccountNameView.prototype, "error", void 0);
__decorate6([
  state()
], W3mRegisterAccountNameView.prototype, "loading", void 0);
__decorate6([
  state()
], W3mRegisterAccountNameView.prototype, "suggestions", void 0);
__decorate6([
  state()
], W3mRegisterAccountNameView.prototype, "profileName", void 0);
W3mRegisterAccountNameView = __decorate6([
  customElement("w3m-register-account-name-view")
], W3mRegisterAccountNameView);

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-register-account-name-success-view/styles.js
var styles_default6 = css`
  .continue-button-container {
    width: 100%;
  }
`;

// node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-register-account-name-success-view/index.js
var __decorate7 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var W3mRegisterAccountNameSuccess = class W3mRegisterAccountNameSuccess2 extends LitElement {
  render() {
    return html`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        gap="6"
        .padding=${["0", "0", "4", "0"]}
      >
        ${this.onboardingTemplate()} ${this.buttonsTemplate()}
        <wui-link
          @click=${() => {
      CoreHelperUtil.openHref(NavigationUtil.URLS.FAQ, "_blank");
    }}
        >
          Learn more
          <wui-icon color="inherit" slot="iconRight" name="externalLink"></wui-icon>
        </wui-link>
      </wui-flex>
    `;
  }
  onboardingTemplate() {
    return html` <wui-flex
      flexDirection="column"
      gap="6"
      alignItems="center"
      .padding=${["0", "6", "0", "6"]}
    >
      <wui-flex gap="3" alignItems="center" justifyContent="center">
        <wui-icon-box size="xl" color="success" icon="checkmark"></wui-icon-box>
      </wui-flex>
      <wui-flex flexDirection="column" alignItems="center" gap="3">
        <wui-text align="center" variant="md-medium" color="primary">
          Account name chosen successfully
        </wui-text>
        <wui-text align="center" variant="md-regular" color="primary">
          You can now fund your account and trade crypto
        </wui-text>
      </wui-flex>
    </wui-flex>`;
  }
  buttonsTemplate() {
    return html`<wui-flex
      .padding=${["0", "4", "0", "4"]}
      gap="3"
      class="continue-button-container"
    >
      <wui-button fullWidth size="lg" borderRadius="xs" @click=${this.redirectToAccount.bind(this)}
        >Let's Go!
      </wui-button>
    </wui-flex>`;
  }
  redirectToAccount() {
    RouterController.replace("Account");
  }
};
W3mRegisterAccountNameSuccess.styles = styles_default6;
W3mRegisterAccountNameSuccess = __decorate7([
  customElement("w3m-register-account-name-success-view")
], W3mRegisterAccountNameSuccess);
export {
  W3mApproveTransactionView,
  W3mRegisterAccountNameSuccess,
  W3mRegisterAccountNameView,
  W3mUpgradeWalletView
};
//# sourceMappingURL=embedded-wallet-O5A4QCCE.js.map
