import {
  property
} from "./chunk-22L3BMLB.js";
import {
  css,
  customElement,
  elementStyles,
  resetStyles
} from "./chunk-E3ORAOFH.js";
import {
  LitElement,
  html
} from "./chunk-EGEXBN4Y.js";

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-link/styles.js
var styles_default = css`
  button {
    border: none;
    background: transparent;
    height: 20px;
    padding: ${({ spacing }) => spacing[2]};
    column-gap: ${({ spacing }) => spacing[1]};
    border-radius: ${({ borderRadius }) => borderRadius[1]};
    padding: 0 ${({ spacing }) => spacing[1]};
    border-radius: ${({ spacing }) => spacing[1]};
  }

  /* -- Variants --------------------------------------------------------- */
  button[data-variant='accent'] {
    color: ${({ tokens }) => tokens.core.textAccentPrimary};
  }

  button[data-variant='secondary'] {
    color: ${({ tokens }) => tokens.theme.textSecondary};
  }

  /* -- Focus states --------------------------------------------------- */
  button:focus-visible:enabled {
    box-shadow: 0px 0px 0px 4px rgba(9, 136, 240, 0.2);
  }

  button[data-variant='accent']:focus-visible:enabled {
    background-color: ${({ tokens }) => tokens.core.foregroundAccent010};
  }

  button[data-variant='secondary']:focus-visible:enabled {
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
  }

  /* -- Hover & Active states ----------------------------------------------------------- */
  button[data-variant='accent']:hover:enabled {
    background-color: ${({ tokens }) => tokens.core.foregroundAccent010};
  }

  button[data-variant='secondary']:hover:enabled {
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
  }

  button[data-variant='accent']:focus-visible {
    background-color: ${({ tokens }) => tokens.core.foregroundAccent010};
  }

  button[data-variant='secondary']:focus-visible {
    background-color: ${({ tokens }) => tokens.theme.foregroundSecondary};
    box-shadow: 0px 0px 0px 4px rgba(9, 136, 240, 0.2);
  }

  button[disabled] {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-link/index.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TEXT_VARIANT_BY_SIZE = {
  sm: "sm-medium",
  md: "md-medium"
};
var TEXT_COLOR_BY_VARIANT = {
  accent: "accent-primary",
  secondary: "secondary"
};
var WuiLink = class WuiLink2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.disabled = false;
    this.variant = "accent";
    this.icon = void 0;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} data-variant=${this.variant}>
        <slot name="iconLeft"></slot>
        <wui-text
          color=${TEXT_COLOR_BY_VARIANT[this.variant]}
          variant=${TEXT_VARIANT_BY_SIZE[this.size]}
        >
          <slot></slot>
        </wui-text>
        ${this.iconTemplate()}
      </button>
    `;
  }
  iconTemplate() {
    if (!this.icon) {
      return null;
    }
    return html`<wui-icon name=${this.icon} size="sm"></wui-icon>`;
  }
};
WuiLink.styles = [resetStyles, elementStyles, styles_default];
__decorate([
  property()
], WuiLink.prototype, "size", void 0);
__decorate([
  property({ type: Boolean })
], WuiLink.prototype, "disabled", void 0);
__decorate([
  property()
], WuiLink.prototype, "variant", void 0);
__decorate([
  property()
], WuiLink.prototype, "icon", void 0);
WuiLink = __decorate([
  customElement("wui-link")
], WuiLink);
//# sourceMappingURL=chunk-6WXZIW6O.js.map
