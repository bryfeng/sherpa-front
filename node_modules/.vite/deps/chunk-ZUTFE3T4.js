import {
  ifDefined
} from "./chunk-CR243GVO.js";
import {
  property
} from "./chunk-22L3BMLB.js";
import {
  css,
  customElement,
  elementStyles,
  resetStyles
} from "./chunk-E3ORAOFH.js";
import {
  LitElement,
  html
} from "./chunk-EGEXBN4Y.js";
import {
  AccountController,
  ChainController,
  ConnectorController,
  ConstantsUtil,
  CoreHelperUtil,
  EventsController,
  RouterController,
  SnackController,
  StorageUtil
} from "./chunk-A54KVSXE.js";

// node_modules/@reown/appkit-controllers/dist/esm/src/utils/SocialsUtil.js
function getPopupWindow() {
  try {
    return CoreHelperUtil.returnOpenHref(`${ConstantsUtil.SECURE_SITE_SDK_ORIGIN}/loading`, "popupWindow", "width=600,height=800,scrollbars=yes");
  } catch (error) {
    throw new Error("Could not open social popup");
  }
}
async function connectFarcaster() {
  RouterController.push("ConnectingFarcaster");
  const authConnector = ConnectorController.getAuthConnector();
  if (authConnector) {
    if (!AccountController.state.farcasterUrl) {
      try {
        const { url } = await authConnector.provider.getFarcasterUri();
        AccountController.setFarcasterUrl(url, ChainController.state.activeChain);
      } catch (error) {
        RouterController.goBack();
        SnackController.showError(error);
      }
    }
  }
}
async function connectSocial(socialProvider) {
  RouterController.push("ConnectingSocial");
  const authConnector = ConnectorController.getAuthConnector();
  let popupWindow = null;
  try {
    const timeout = setTimeout(() => {
      throw new Error("Social login timed out. Please try again.");
    }, 45e3);
    if (authConnector && socialProvider) {
      if (!CoreHelperUtil.isTelegram()) {
        popupWindow = getPopupWindow();
      }
      if (popupWindow) {
        AccountController.setSocialWindow(popupWindow, ChainController.state.activeChain);
      } else if (!CoreHelperUtil.isTelegram()) {
        throw new Error("Could not create social popup");
      }
      const { uri } = await authConnector.provider.getSocialRedirectUri({
        provider: socialProvider
      });
      if (!uri) {
        popupWindow == null ? void 0 : popupWindow.close();
        throw new Error("Could not fetch the social redirect uri");
      }
      if (popupWindow) {
        popupWindow.location.href = uri;
      }
      if (CoreHelperUtil.isTelegram()) {
        StorageUtil.setTelegramSocialProvider(socialProvider);
        const parsedUri = CoreHelperUtil.formatTelegramSocialLoginUrl(uri);
        CoreHelperUtil.openHref(parsedUri, "_top");
      }
      clearTimeout(timeout);
    }
  } catch (error) {
    popupWindow == null ? void 0 : popupWindow.close();
    SnackController.showError(error == null ? void 0 : error.message);
  }
}
async function executeSocialLogin(socialProvider) {
  AccountController.setSocialProvider(socialProvider, ChainController.state.activeChain);
  EventsController.sendEvent({
    type: "track",
    event: "SOCIAL_LOGIN_STARTED",
    properties: { provider: socialProvider }
  });
  if (socialProvider === "farcaster") {
    await connectFarcaster();
  } else {
    await connectSocial(socialProvider);
  }
}

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-logo/styles.js
var styles_default = css`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border-radius: ${({ borderRadius }) => borderRadius["20"]};
    overflow: hidden;
  }

  wui-icon {
    width: 100%;
    height: 100%;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-logo/index.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WuiLogo = class WuiLogo2 extends LitElement {
  constructor() {
    super(...arguments);
    this.logo = "google";
  }
  render() {
    return html`<wui-icon color="inherit" size="inherit" name=${this.logo}></wui-icon> `;
  }
};
WuiLogo.styles = [resetStyles, styles_default];
__decorate([
  property()
], WuiLogo.prototype, "logo", void 0);
WuiLogo = __decorate([
  customElement("wui-logo")
], WuiLogo);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-social/styles.js
var styles_default2 = css`
  :host {
    width: 100%;
  }

  button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: ${({ spacing }) => spacing[3]};
    width: 100%;
    background-color: transparent;
    border-radius: ${({ borderRadius }) => borderRadius[4]};
  }

  wui-text {
    text-transform: capitalize;
  }

  @media (hover: hover) {
    button:hover:enabled {
      background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
    }
  }

  button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-social/index.js
var __decorate2 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WuiListSocial = class WuiListSocial2 extends LitElement {
  constructor() {
    super(...arguments);
    this.logo = "google";
    this.name = "Continue with google";
    this.disabled = false;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} tabindex=${ifDefined(this.tabIdx)}>
        <wui-flex gap="2" alignItems="center">
          <wui-image ?boxed=${true} logo=${this.logo}></wui-image>
          <wui-text variant="lg-regular" color="primary">${this.name}</wui-text>
        </wui-flex>
        <wui-icon name="chevronRight" size="lg" color="default"></wui-icon>
      </button>
    `;
  }
};
WuiListSocial.styles = [resetStyles, elementStyles, styles_default2];
__decorate2([
  property()
], WuiListSocial.prototype, "logo", void 0);
__decorate2([
  property()
], WuiListSocial.prototype, "name", void 0);
__decorate2([
  property()
], WuiListSocial.prototype, "tabIdx", void 0);
__decorate2([
  property({ type: Boolean })
], WuiListSocial.prototype, "disabled", void 0);
WuiListSocial = __decorate2([
  customElement("wui-list-social")
], WuiListSocial);

export {
  executeSocialLogin
};
//# sourceMappingURL=chunk-ZUTFE3T4.js.map
